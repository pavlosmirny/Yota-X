// utils/telegramSender.ts
const BOT_TOKEN = "YOUR_BOT_TOKEN";
const CHAT_ID = "YOUR_CHAT_ID";

interface MessageData {
  name: string;
  email: string;
  message: string;
  pageName: string;
  [key: string]: string; // –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
}

export const sendToTelegram = async (data: MessageData) => {
  const text = `
üì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!
üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞: ${data.pageName}

üë§ –ò–º—è: ${data.name}
üìß Email: ${data.email}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:
${data.message}

${Object.entries(data)
  .filter(([key]) => !["name", "email", "message", "pageName"].includes(key))
  .map(([key, value]) => `${key}: ${value}`)
  .join("\n")}
  `;

  try {
    const response = await fetch(
      `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chat_id: CHAT_ID,
          text,
          parse_mode: "HTML",
        }),
      }
    );

    if (!response.ok) {
      throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram");
    }

    return true;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞:", error);
    throw error;
  }
};
